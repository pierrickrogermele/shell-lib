#!/bin/bash

#############
# CONSTANTS #
#############

SCRIPTNAME="${0##*/}"
SCRIPTDIR="${0%/*}"
TIMEOUT=TIMEOUT
if [ -n "$SCRIPTDIR" ] ; then
	TIMEOUT="$SCRIPTDIR/$TIMEOUT"
fi

####################
# GLOBAL VARIABLES #
####################

HOST=
PORT=
QUIET=

#########
# ERROR #
#########

function error {
	printf "ERROR: $1\n" >&2
	exit 1
}

###############
# PRINT USAGE #
###############

function print_usage {
cat <<EOF
A script for testing if a telnet connnection is available.
Usage: $SCRIPTNAME host port
EOF
}

#############
# READ ARGS #
#############

function read_args {

	# Parse options
	while true ; do
		case $1 in
			-h|--help) print_usage ; exit 0 ;;
			-q|--quiet) QUIET=yes ;;
			-?*) error "Unknown option \"$1\"." ;;
			*) break
		esac
		shift
	done

	# Read left command line arguments
	HOST=$1
	PORT=$2
	
	# Check arguments
	[ -n "$HOST" ] || error "You must set a host."
	[ -n "$PORT" ] || error "You must set a port."
}

########
# MAIN #
########

# Read command line arguments
read_args "$@"

# Run telnet with a timeout
connected=$($TIMEOUT -t 1 telnet $HOST $PORT | grep Connected)

# Return error code according to connection success
if [ -z "$connected" ] ; then
	[ -n "$QUIET" ] || echo "Can't connect to server." >&2
	exit 1
fi
exit 0
